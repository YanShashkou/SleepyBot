from aiogram import Bot, Dispatcher, types, executor
import config
import sqlite3
import datetime
from aiogram.types.web_app_info import WebAppInfo

bot = Bot(config.BOT_TOKEN)
dp = Dispatcher(bot)

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    data={
        "NAME": message.from_user.first_name,
        "SURNAME": message.from_user.last_name,
        "IS_SUBCRIBED": False,
        "CHAT_ID": message.chat.id,
        "SLEEP_TIME": '00:00',
        "WAKE_UP_TIME" :'00:00'
    }
    while True:
        await bot.send_message(1389092057,'—Ö—É–π')

    con = sqlite3.connect('sleppy.sql')
    cur = con.cursor()
    cur.execute("""CREATE TABLE IF NOT EXISTS users (id INTEGER AUTO INCREMENT PRIMARY KEY, chat_id INTEGER NOT NULL UNIQUE , name varchar(250) NOT NULL, surname varchar(250) NOT NULL,wake_up varchar(250) NOT NULL,sleep_time varchar(250) NOT NULL,is_subcribed BOOLEAN)""")
    try:
        cur.execute("""INSERT INTO users (chat_id, name, surname,wake_up,sleep_time,is_subcribed) VALUES ('%s','%s','%s','%s','%s','%s')""" % (data['CHAT_ID'],data['NAME'],data['SURNAME'],data['WAKE_UP_TIME'],data['SLEEP_TIME'],data['IS_SUBCRIBED']))
    except:
        await bot.send_message(message.chat.id, '–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ –Ω–∞–ø–∏—à–∏ –≤ –Ω–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É')
    cur.execute("""SELECT * FROM users""")
    await bot.send_message(message.chat.id,cur.fetchall())
    con.commit()
    cur.close()
    con.close()

    markup = types.InlineKeyboardMarkup(one_time_keyboard=True)
    btn1 = types.InlineKeyboardButton("–ù–∞—á–∞—Ç—å –∫—É—Ä—Å üí™", callback_data="start")
    markup.add(btn1)
    await bot.send_message(message.chat.id,f' –ü—Ä–∏–≤–µ—Ç !\n\n–ö–∞–∂–µ—Ç—Å—è, –º—ã —Å —Ç–æ–±–æ–π –µ—â—ë –Ω–µ –ø—Ä–æ—à–ª–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –∫ –∫—É—Ä—Å—É. –î–∞–≤–∞–π –Ω–∞—á–Ω—ë–º?',reply_markup=markup)

@dp.callback_query_handler()
async def callback_query(call):
    if call.data =="start":
        markup = types.InlineKeyboardMarkup()
        btn1 = types.InlineKeyboardButton("–°–ø–∞—Å–∏–±–æ —Ç–µ–±–µ", callback_data="first")
        btn2= types.InlineKeyboardButton("–Ø —Ö–æ—á—É –ø–æ–ª–Ω—É—é –≤–µ—Ä—Å–∏—é", callback_data="full")
        markup.add(btn1,btn2)
        await call.message.edit_text(f'–ü—Ä–∏–≤–µ—Ç !\n\n–ö–∞–∂–µ—Ç—Å—è, –º—ã —Å —Ç–æ–±–æ–π –µ—â—ë –Ω–µ –ø—Ä–æ—à–ª–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫—É –∫ –∫—É—Ä—Å—É. –î–∞–≤–∞–π –Ω–∞—á–Ω—ë–º?\n\n –ù–∞—á–∞—Ç—å –∫—É—Ä—Å üí™')
        await bot.send_message(call.message.chat.id, '–û—Ç–ª–∏—á–Ω–æ,—è –≤–∏–∂—É –º—ã —Å —Ç–æ–±–æ–π –ø–æ–¥—Ä—É–∂–∏–º—Å—è\n\n–î–∞–º —Ç–µ–±–µ 3 –¥–Ω—è,—á—Ç–æ-–±—ã –æ—Ü–µ–Ω–∏—Ç—å –Ω–∞—à –∫—É—Ä—Å',reply_markup=markup)

executor.start_polling(dp)